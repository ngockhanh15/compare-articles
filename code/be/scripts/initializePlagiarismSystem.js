const plagiarismDetectionService = require('../services/PlagiarismDetectionService');

/**
 * Script ƒë·ªÉ kh·ªüi t·∫°o h·ªá th·ªëng plagiarism detection
 * ƒê∆∞·ª£c g·ªçi khi server kh·ªüi ƒë·ªông
 */
async function initializePlagiarismSystem() {
  try {
    console.log('üöÄ Initializing Plagiarism Detection System...');
    
    // Kh·ªüi t·∫°o service
    await plagiarismDetectionService.initialize();
    
    // L·∫•y th·ªëng k√™ sau khi kh·ªüi t·∫°o
    const stats = plagiarismDetectionService.getStats();
    
    console.log('‚úÖ Plagiarism Detection System initialized successfully!');
    console.log(`üìä System Stats:
    - Total Documents: ${stats.totalDocuments}
    - Total Chunks: ${stats.totalChunks}
    - Initialized: ${stats.initialized}
    - Memory Usage: ${Math.round(stats.memoryUsage.heapUsed / 1024 / 1024)}MB`);
    
    return {
      success: true,
      stats: stats
    };
    
  } catch (error) {
    console.error('‚ùå Failed to initialize Plagiarism Detection System:', error);
    
    return {
      success: false,
      error: error.message
    };
  }
}

// N·∫øu script ƒë∆∞·ª£c ch·∫°y tr·ª±c ti·∫øp
if (require.main === module) {
  // K·∫øt n·ªëi database tr∆∞·ªõc khi kh·ªüi t·∫°o
  require('../config/database');
  
  initializePlagiarismSystem()
    .then(result => {
      if (result.success) {
        console.log('‚úÖ Initialization completed successfully');
        process.exit(0);
      } else {
        console.error('‚ùå Initialization failed');
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('‚ùå Initialization error:', error);
      process.exit(1);
    });
}

module.exports = initializePlagiarismSystem;